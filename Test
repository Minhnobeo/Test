-- UNC Executor Test Suite (Full Version)
local success_count = 0
local total_tests = 0

print("\n=== BẮT ĐẦU KIỂM TRA EXECUTOR (UNC STANDARD + EXTENSIONS) ===\n")

-- Helper function
local function runTest(name, testFunc)
    total_tests = total_tests + 1
    local success, result = pcall(testFunc)
    if success and result then
        print("[PASS] " .. name)
        success_count = success_count + 1
    elseif success then
        print("[FAIL] " .. name .. " - Kiểm tra không đạt yêu cầu.")
    else
        print("[ERROR] " .. name .. " - Lỗi: " .. tostring(result))
    end
end

-- UNC Basic Tests (được cải tiến)
runTest("Part Position", function()
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    part.Position = Vector3.new(0, 10, 0)
    local result = (part.Position.Y == 10)
    part:Destroy()
    return result
end)

runTest("Event Connect (Touched)", function()
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    local connection = part.Touched:Connect(function() end)
    local result = (connection ~= nil)
    connection:Disconnect()
    part:Destroy()
    return result
end)

runTest("Humanoid Health Change", function()
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    local humanoid = Instance.new("Humanoid")
    humanoid.Parent = part
    humanoid.Health = 50
    local result = (humanoid.Health == 50)
    part:Destroy()
    return result
end)

runTest("Players Service Access", function()
    local players = game:GetService("Players")
    return (players ~= nil)
end)

-- UNC Extended Tests
runTest("RemoteEvent FireServer", function()
    local event = Instance.new("RemoteEvent")
    event.Parent = game.ReplicatedStorage
    local result = (event.FireServer ~= nil)
    event:Destroy()
    return result
end)

runTest("BindableEvent Fire", function()
    local event = Instance.new("BindableEvent")
    event.Parent = game.ReplicatedStorage
    local called = false
    event.Event:Connect(function() called = true end)
    event:Fire()
    task.wait(0.05)
    event:Destroy()
    return called
end)

runTest("Lighting Service Access", function()
    local lighting = game:GetService("Lighting")
    lighting.Brightness = 2
    local result = (lighting.Brightness == 2)
    return result
end)

runTest("ReplicatedStorage Access", function()
    local rs = game:GetService("ReplicatedStorage")
    return (rs ~= nil)
end)

runTest("RunService Heartbeat Connect", function()
    local runService = game:GetService("RunService")
    local connected = false
    local conn = runService.Heartbeat:Connect(function()
        connected = true
    end)
    task.wait(0.05)
    conn:Disconnect()
    return connected
end)

runTest("TweenService Create", function()
    local tweenService = game:GetService("TweenService")
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    local tweenInfo = TweenInfo.new(1)
    local tween = tweenService:Create(part, tweenInfo, {Position = Vector3.new(0, 10, 0)})
    local result = (tween ~= nil)
    part:Destroy()
    return result
end)

runTest("Debris AddItem", function()
    local debris = game:GetService("Debris")
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    debris:AddItem(part, 1)
    local result = (part ~= nil)
    return result
end)

runTest("Sound Playback", function()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://1837467915"
    sound.Parent = game.Workspace
    sound:Play()
    local result = (sound.IsPlaying == true)
    sound:Stop()
    sound:Destroy()
    return result
end)

runTest("Humanoid WalkSpeed Change", function()
    local part = Instance.new("Part")
    part.Parent = game.Workspace
    local humanoid = Instance.new("Humanoid")
    humanoid.Parent = part
    humanoid.WalkSpeed = 25
    local result = (humanoid.WalkSpeed == 25)
    part:Destroy()
    return result
end)

runTest("GuiObject Creation", function()
    local screenGui = Instance.new("ScreenGui")
    local textLabel = Instance.new("TextLabel")
    textLabel.Text = "Hello!"
    textLabel.Parent = screenGui
    local player = game.Players.LocalPlayer
    if player then
        screenGui.Parent = player:FindFirstChildOfClass("PlayerGui")
        local result = (textLabel.Text == "Hello!")
        screenGui:Destroy()
        return result
    else
        screenGui:Destroy()
        return false
    end
end)

-- Kết quả cuối cùng
print("\n=== KẾT THÚC KIỂM TRA EXECUTOR ===")
local unc_percentage = (success_count / total_tests) * 100
print(string.format("Tổng số test thành công: %d/%d (UNC: %.2f%%)", success_count, total_tests, unc_percentage))
